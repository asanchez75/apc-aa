List of main changes between ActionApps 2.8.1 and 2.10.0
(all changes you can see in CHANGES file: http://apc-aa.svn.sourceforge.net/viewvc/apc-aa/trunk/CHANGES?view=markup)


ActionApps Output Functionality

  - new {ifset:<aa_expression>:<aa_output>}
    If <aa_expression> is filled by some text, then print <aa_output>.
    <aa_output> could contain _#1 alias as shortcut for <aa_expression>
    condition, but you can use any {} AA expression. Example:
       {ifset:{img_height.....2}: height="_#1"}

  - new {ids:<slice>:<conds>[:<sort>[:<delimiter>]]} syntax, which
    returns long item ids based on on conditions  d-... (like in views)
    Example:
       {ids:6a435236626262738348478463536272:d-category.......1-RLIKE-Bio-switch.........1-=-1:headine........-}
    returns dash separated long ids of items in selected slice where
    category begins with Bio and switch is (=) 1 ordered by headline
    descending. The main usage is with {item..} syntax - just like:
        {item:{ids:...}:_#HEADLINE}

  - new {now} alias (returns current time as timestamp, so you can use
    it in compare functions)

  - new AA expressions which is based on f_t alias function modifiers
    Instead of {alias:headline........:f_t:some_text:striptags} you can
    write {striptags:some_text}. The same it is for
        - {rss:some_text}
        - {csv:some_text}
        - {safe:some_text}
        - {javascript:some_text}
        - {urlencode:some_text}
        - {conds:some_text}

  - {item:<ids>:<aa_expression>[:<delimiter>]} code now allows to specify
     more than one ID in <ids>. <ids> should be dash "-" separated
     and could be in short as well as long form. You can specify also
     record delimiter as fourth parameter. If not present no delimiter is
     used. Example: {item:53443-54322-53553:_HEADLINE:, }

  - new function {compare:<number1>:<number2>} for comparing numbers
     (aka dates): Returns:    'L' if number1 is less than number2,
                              'G' if number1 is greater than number2,
                              'E' if the numbers are equal.
     Usage example:
      {switch({compare:{last_edit.......}:1125481998})L:less:G:more:equal}

  - new {substitute:some_text} which simply expands the text
    (finds aliases and substitute)

  - new {convert:some_text:from:to} for character encoding
    (like: {convert:some_text:windows-1250:us-acsii})

  - new parameter convertto and convertfrom for view.php3 which changes
    character encoding
    (http://examle.org/aa/view.php3?vid=22&convertfrom=windows-1250&convertto=utf-8)

  - new function {preg_match:[0-9]*:some text with number 25452 in it},
    which returns 25452 (based on specified regular expression)

  - new {@fieldlist} syntax construct, which lists all field names
     in the item. The syntax is exactly the same as you already know from
     {@category.......1} syntax, so you can use also:
        {@fieldlist:-},
        {@fieldlist:,:<b>_#1</b>}
        as well as {@fieldlist(_#CSV_FMTD):,:_#1}.
     For more info see {@category.......1} or {list:category.......1}
     syntax in the manual.
     Could be used for example to create general CSV export from the slice
        Odd HTML is: {@fieldlist(_#CSV_FMTD):,:_#1}, where
        _#CSV_FMTD is defined as f_t and with parameter:
            {alias:{loop............}:f_t::csv}.

  - view parameters now could be combined. You can use
       cmd[65][]=v-66&cmd[65][]=c-1-Cars
     or if you want to display only items from the set which passes the
     condition, you can write
       cmd[65][]=x-82763-82344-82352&cmd[65][]=c-1-Cars

  - top HTML for discussions now can contain aliases (and other constructs), just
    like for any other view


ActionApps Input Form Functionality

  - new possibility to create "Computed field". It is good solution for
     all values, which could be precomputed, since its evaluation
     on item-show-time would be slow. Any of your field could be changed
     to "computed" - you just change "Insert" function for the field
     on "Slice Admin" -> "Fields" page. In such case the other setting
     of the field (like Default, Input type, ...) are irrelevant,
     of course. Two prepared field templates (computed_num....
     and computed_txt....) was added to sql_update.php3. Yes, you can use
     any {view...}, {include...}, {switch...} in the computed string
     (in Parameter)

  - added new field types based on suggestion of Philip King and Antonin Slejska
     (name, phone, fax, address, location, city, country, range, real)

  - uploaded images can now be resized also exactly to specified
     size (e.g. square). Image is resized and croped if needed from
     the center of original image. It can be set-up in parameters of
     "Insert" function for the field on "Slice Admin" -> "Fields" page.

  - you are able to specify the name for all tabs, when you are using
     inputform formbreaks:
        {formbreak:<current_tab_name>:<next_tab_name>:...}
     The names are separated by ":" and are applied to current and then
     other tabs. It is useful mainly for the last tab.

  - added support for unaliasing of parameters of field input
    functions. Now you can use any {} AA expressions in parameters
    (e.g. conds[0][switch..........]={user:switch..........} in
    combination with user settings from ReaderManagement module).

  - there is no longer need to add slice_id parameter to itemedit.php3
    script if called from public pages. You can just provide id
    (the slice_id is then grabbed from the item). Internaly we slightly
    modified the character encoding handling in html header of input form.


ActionApps Admin Interface Improvements

  - user data (like password, name, e-mail) is now editable by users
     itself (just click on your login name in upper right corner
     of the page - near the "Logout")

  - new possibility to upload constants from admin interface - see "Import
     constants" on constants editing page

  - new site module admin interface design (thanks to Colnodo)

  - "Modify content" function of AA admin interface improved:
        - now is able to set/unset also HTML/text flag
        - now also able to copy content of another field
          (exactly as is - including multivalues!)

  - improved CSV import of data. Now you can not only
        - "Store the item with new id"
        - "Do not store the item" or
        - "Update the item (overwrite)"
     with already existing items, but you can also select
        - "Rewrite only the fields, for which the action is defined"
        - "Add the values in paralel to current values (the multivalues
            are stored, where possible)"

  - there are new links to View-edit page under each textarea, which
    contain {view.php3?vid=...} so you can easily navigate between view
    settings

  - improved usability of Admin interface of View edit - you will stay
    on the view setting after save (not moved to list of views)

  - added priority field for slices (modules), so you can reorder
    the modules in top-right selectbox

  - added number of displayed items near to page-scroller

  - CSV import is allowed also for editors (see left menu in ItemManager)

  - the data for offline filling could be submited not only in offline
     parameter, but you can send it also as uploaded file (in offline.php3)

  - new possibility to remove selected items from database (see "Remove
     (remove from database)" bottom action on Item Manager - Trash page)

  - new operators added to searchbar (in ItemManager):
       "not set" (= ISNULL),
       "is set" (= NOTNULL)
     so you can search for items, where specified field is (not) set

  - changed behavior of unary operators ISNULL and NOTNULL - Those
     operators did not work without "value" specified, which was quite
     strange, for unary operators. Now it works without any value
     specified.

  - you can display all informations about specified item on "AA -> AA Finder"
     page, now

  - all selectboxes should always show the filled value, even if the value
     in not in the list

  - default inputform view for the slice now could be set not only
     from default Profile setting page, but also
     from "Slice Admin" -> "Design - Item Manager" -> "Use special view",
     which is easier to find for users. Both options are equal (stores it
     to the profile)


New ActionApps Features

  - new dynamic "slice setting fields" implemented - now you have
     the possibility to add "slice fields" (just like you do with normal
     item fields). Such fields then can be used for slice setting common
     to all items. Such fields are prefixed by underscore (automaticaly)
     and you can access it through {alias:_field_id.......:f_e:slice_info}

  - new possibility to use aliases and fields from Reader Slice
     in Alert's e-mails. Now it is possible to create personalized e-mail
     templates, so the e-mail could look like "Dear Mr. Rosicky, ...".
     You can use the aliases in welcome e-mail as well as in alerts e-mail

  - Individual Readers from Reader Management slice could became AA
     users/admins (now also for SQL permission system)

  - csv import rewritten to allow periodical feeding of the data from
     url/file (will be improved in next version)


Inner Changes in the ActionApps code

  - fixed security problem with require - requires no longer use
    variables (see http://secunia.com/advisories/20299/)

  - new configuration option TOEXECUTE_ALLOWED_TIME which defines, how
    long should be processed tasks from "toexecute" queue

  - fixed PHP5 related bugs
      - New configuration variables DB_CHARACTER_SET and
        DB_COLLATION_CONNECTION which is needed by MySQL 4.1 and PHP5
        when you do not want to comunicate with database in UTF
      - Offline filing now do not crash on WDDX_unserialize (php5 bug).
      - "30 Nov 1999" date bug

  - database structure updated to better work in MySQL 4 and MySQL 5
    (columns with packed ids are marked as binary, so it is not converted
    during import by MySQL characterset feature)

  - new test environment. Created new abstract class Optimize (test.php3),
    from which you (as programmer) can create new testing and possibly
    repair scripts. For now we have following tests/repairs
      - finding unnecessary duplicate records in relation table
      - conversion of permissions for items, which was filled by some
        reader from Reader slice.
      - clear pagecache
    Run /test.php3 for more details.

  - new Conditions and Sortorder classes (used for conditions...)

  - new AA_Alias/ AA_Aliases class for better Alias handling

  - fixed RSS and AARSS feeding - short_ids are not incremented after
    each feeding - Feeding moved to grabber/saver API

  - added better support for bulgarian language translation

  - Spanish language translation updated (thanks to Julian Casasbuenas
    from Colnodo)

  - ... and many, many bugs fixed ... and ... introduced... :o)


